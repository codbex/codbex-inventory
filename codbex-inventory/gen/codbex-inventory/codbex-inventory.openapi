openapi: 3.0.3
info:
  title: Inventory Management Application - OpenAPI 3.0
  version: 1.0.0
  description: Managing inventory data
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: Settings
  - name: Stores
  - name: GoodsReceipts
  - name: GoodsReceipts
  - name: GoodsIssues
  - name: GoodsIssues
  - name: StockRecords
  - name: Settings
  - name: StockAdjustments
  - name: Settings
  - name: StockAdjustments
  - name: DeliveryNote
  - name: DeliveryNote
  - name: Waste
  - name: Settings
paths:
  /codbex-inventory/gen/codbex-inventory/api/Settings/StoreStatusService.ts:
    get:
      summary: List StoreStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StoreStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StoreStatus
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StoreStatusService.ts/{id}:
    get:
      summary: Get StoreStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StoreStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StoreStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StoreStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StoreStatusService.ts/count:
    get:
      summary: Count the number of StoreStatus
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StoreStatus by StoreStatusFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StoreStatusService.ts/search:
    post:
      summary: Search StoreStatus by StoreStatusFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StoreStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Stores/StoreService.ts:
    get:
      summary: List Store
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Stores
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Store'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Store
      tags:
        - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Stores/StoreService.ts/{id}:
    get:
      summary: Get Store by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Stores
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Store'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Store by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Store'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Store by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Stores
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Stores/StoreService.ts/count:
    get:
      summary: Count the number of Store
      tags:
        - Stores
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Store by StoreFilterOptions
      tags:
        - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      Location: "abcd"
                      Contact: "abcd"
                      Manager: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      Location: "abcd"
                      Contact: "abcd"
                      Manager: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Stores/StoreService.ts/search:
    post:
      summary: Search Store by StoreFilterOptions
      tags:
        - Stores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      Location: "abcd"
                      Contact: "abcd"
                      Manager: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Email: "abcd"
                      Phone: "abcd"
                      Address: "abcd"
                      PostCode: "abcd"
                      Location: "abcd"
                      Contact: "abcd"
                      Manager: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Store'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptService.ts:
    get:
      summary: List GoodsReceipt
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceipt'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create GoodsReceipt
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceipt'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsReceipt'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptService.ts/{id}:
    get:
      summary: Get GoodsReceipt by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceipt'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update GoodsReceipt by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceipt'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsReceipt'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete GoodsReceipt by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptService.ts/count:
    get:
      summary: Count the number of GoodsReceipt
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of GoodsReceipt by GoodsReceiptFilterOptions
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptService.ts/search:
    post:
      summary: Search GoodsReceipt by GoodsReceiptFilterOptions
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceipt'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptItemService.ts:
    get:
      summary: List GoodsReceiptItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceiptItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create GoodsReceiptItem
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsReceiptItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptItemService.ts/{id}:
    get:
      summary: Get GoodsReceiptItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceiptItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update GoodsReceiptItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsReceiptItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete GoodsReceiptItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsReceipts
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptItemService.ts/count:
    get:
      summary: Count the number of GoodsReceiptItem
      tags:
        - GoodsReceipts
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of GoodsReceiptItem by GoodsReceiptItemFilterOptions
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsReceipts/GoodsReceiptItemService.ts/search:
    post:
      summary: Search GoodsReceiptItem by GoodsReceiptItemFilterOptions
      tags:
        - GoodsReceipts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsReceiptItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsReceiptItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueService.ts:
    get:
      summary: List GoodsIssue
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssue'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create GoodsIssue
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssue'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsIssue'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueService.ts/{id}:
    get:
      summary: Get GoodsIssue by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssue'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update GoodsIssue by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssue'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsIssue'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete GoodsIssue by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueService.ts/count:
    get:
      summary: Count the number of GoodsIssue
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of GoodsIssue by GoodsIssueFilterOptions
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueService.ts/search:
    post:
      summary: Search GoodsIssue by GoodsIssueFilterOptions
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssue'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueItemService.ts:
    get:
      summary: List GoodsIssueItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssueItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create GoodsIssueItem
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsIssueItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueItemService.ts/{id}:
    get:
      summary: Get GoodsIssueItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssueItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update GoodsIssueItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodsIssueItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete GoodsIssueItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - GoodsIssues
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueItemService.ts/count:
    get:
      summary: Count the number of GoodsIssueItem
      tags:
        - GoodsIssues
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of GoodsIssueItem by GoodsIssueItemFilterOptions
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/GoodsIssues/GoodsIssueItemService.ts/search:
    post:
      summary: Search GoodsIssueItem by GoodsIssueItemFilterOptions
      tags:
        - GoodsIssues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoodsIssueItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/GoodsIssueItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockRecords/StockRecordService.ts:
    get:
      summary: List StockRecord
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - StockRecords
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StockRecord
      tags:
        - StockRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecord'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockRecords/StockRecordService.ts/{id}:
    get:
      summary: Get StockRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockRecords
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecord'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StockRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecord'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StockRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockRecords
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockRecords/StockRecordService.ts/count:
    get:
      summary: Count the number of StockRecord
      tags:
        - StockRecords
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StockRecord by StockRecordFilterOptions
      tags:
        - StockRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockRecords/StockRecordService.ts/search:
    post:
      summary: Search StockRecord by StockRecordFilterOptions
      tags:
        - StockRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecord'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockRecordDirectionService.ts:
    get:
      summary: List StockRecordDirection
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StockRecordDirection
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordDirection'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockRecordDirectionService.ts/{id}:
    get:
      summary: Get StockRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecordDirection'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StockRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordDirection'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StockRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockRecordDirectionService.ts/count:
    get:
      summary: Count the number of StockRecordDirection
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StockRecordDirection by StockRecordDirectionFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordDirectionFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockRecordDirectionService.ts/search:
    post:
      summary: Search StockRecordDirection by StockRecordDirectionFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockRecordDirectionFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockRecordDirection'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentService.ts:
    get:
      summary: List StockAdjustment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StockAdjustment
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentService.ts/{id}:
    get:
      summary: Get StockAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StockAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StockAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentService.ts/count:
    get:
      summary: Count the number of StockAdjustment
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StockAdjustment by StockAdjustmentFilterOptions
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Purpose: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Purpose: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentService.ts/search:
    post:
      summary: Search StockAdjustment by StockAdjustmentFilterOptions
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Purpose: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Purpose: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockAdjustmentTypeService.ts:
    get:
      summary: List StockAdjustmentType
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StockAdjustmentType
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentType'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustmentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockAdjustmentTypeService.ts/{id}:
    get:
      summary: Get StockAdjustmentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentType'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StockAdjustmentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentType'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustmentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StockAdjustmentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockAdjustmentTypeService.ts/count:
    get:
      summary: Count the number of StockAdjustmentType
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StockAdjustmentType by StockAdjustmentTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentTypeFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Description: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Description: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/StockAdjustmentTypeService.ts/search:
    post:
      summary: Search StockAdjustmentType by StockAdjustmentTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentTypeFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                      Description: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
                      Description: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentType'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentItemService.ts:
    get:
      summary: List StockAdjustmentItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create StockAdjustmentItem
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustmentItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentItemService.ts/{id}:
    get:
      summary: Get StockAdjustmentItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update StockAdjustmentItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockAdjustmentItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete StockAdjustmentItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - StockAdjustments
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentItemService.ts/count:
    get:
      summary: Count the number of StockAdjustmentItem
      tags:
        - StockAdjustments
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of StockAdjustmentItem by StockAdjustmentItemFilterOptions
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Batch: "abcd"
                      Serial: "abcd"
                      Description: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Batch: "abcd"
                      Serial: "abcd"
                      Description: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/StockAdjustments/StockAdjustmentItemService.ts/search:
    post:
      summary: Search StockAdjustmentItem by StockAdjustmentItemFilterOptions
      tags:
        - StockAdjustments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAdjustmentItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Batch: "abcd"
                      Serial: "abcd"
                      Description: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Batch: "abcd"
                      Serial: "abcd"
                      Description: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/StockAdjustmentItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteService.ts:
    get:
      summary: List DeliveryNote
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create DeliveryNote
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNote'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteService.ts/{id}:
    get:
      summary: Get DeliveryNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNote'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update DeliveryNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNote'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete DeliveryNote by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteService.ts/count:
    get:
      summary: Count the number of DeliveryNote
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of DeliveryNote by DeliveryNoteFilterOptions
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteService.ts/search:
    post:
      summary: Search DeliveryNote by DeliveryNoteFilterOptions
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNote'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteItemService.ts:
    get:
      summary: List DeliveryNoteItem
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNoteItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create DeliveryNoteItem
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteItem'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteItemService.ts/{id}:
    get:
      summary: Get DeliveryNoteItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNoteItem'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update DeliveryNoteItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteItem'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteItem'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete DeliveryNoteItem by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - DeliveryNote
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteItemService.ts/count:
    get:
      summary: Count the number of DeliveryNoteItem
      tags:
        - DeliveryNote
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of DeliveryNoteItem by DeliveryNoteItemFilterOptions
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteItemFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/DeliveryNote/DeliveryNoteItemService.ts/search:
    post:
      summary: Search DeliveryNoteItem by DeliveryNoteItemFilterOptions
      tags:
        - DeliveryNote
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteItemFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/DeliveryNoteItem'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Waste/WasteService.ts:
    get:
      summary: List Waste
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Waste
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Waste'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Waste
      tags:
        - Waste
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waste'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waste'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Waste/WasteService.ts/{id}:
    get:
      summary: Get Waste by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Waste
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Waste'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Waste by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Waste
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Waste'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waste'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Waste by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Waste
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Waste/WasteService.ts/count:
    get:
      summary: Count the number of Waste
      tags:
        - Waste
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of Waste by WasteFilterOptions
      tags:
        - Waste
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Reason: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Reason: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Waste/WasteService.ts/search:
    post:
      summary: Search Waste by WasteFilterOptions
      tags:
        - Waste
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Number: "abcd"
                      Reason: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Number: "abcd"
                      Reason: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/Waste'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/WasteTypeService.ts:
    get:
      summary: List WasteType
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WasteType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create WasteType
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/WasteTypeService.ts/{id}:
    get:
      summary: Get WasteType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WasteType'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update WasteType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteType'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasteType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete WasteType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/WasteTypeService.ts/count:
    get:
      summary: Count the number of WasteType
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of WasteType by WasteTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteTypeFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-inventory/gen/codbex-inventory/api/Settings/WasteTypeService.ts/search:
    post:
      summary: Search WasteType by WasteTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WasteTypeFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/WasteType'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    StoreStatus:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    StoreStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Store:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 100
        Email:
          type: string
          minLength: 0
          maxLength: 50
        Phone:
          type: string
          minLength: 0
          maxLength: 20
        Address:
          type: string
          minLength: 0
          maxLength: 20
        PostCode:
          type: string
          minLength: 0
          maxLength: 20
        City:
          type: integer
          format: int32
        Country:
          type: integer
          format: int32
        Location:
          type: string
          minLength: 0
          maxLength: 2000
        Contact:
          type: string
          minLength: 0
          maxLength: 2000
        Manager:
          type: string
          minLength: 0
          maxLength: 20
        Status:
          type: integer
          format: int32
        Company:
          type: integer
          format: int32
    StoreFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                PostCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Location:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Contact:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Manager:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Status:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Email:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                Phone:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Address:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                PostCode:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                City:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Country:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Location:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Contact:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 2000
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 2000
                Manager:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Status:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Email:
                  type: string
                  minLength: 0
                  maxLength: 50
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 20
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                Country:
                Location:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Contact:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 20
                Status:
                Company:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Email:
                  type: string
                  minLength: 0
                  maxLength: 50
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 20
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                Location:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Contact:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 20
                Status:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Email:
                  type: string
                  minLength: 0
                  maxLength: 50
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 20
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                Location:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Contact:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 20
                Status:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Email:
                  type: string
                  minLength: 0
                  maxLength: 50
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 20
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                Location:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Contact:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 20
                Status:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                Email:
                  type: string
                  minLength: 0
                  maxLength: 50
                Phone:
                  type: string
                  minLength: 0
                  maxLength: 20
                Address:
                  type: string
                  minLength: 0
                  maxLength: 20
                PostCode:
                  type: string
                  minLength: 0
                  maxLength: 20
                City:
                  type: integer
                  format: int32
                Country:
                  type: integer
                  format: int32
                Location:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Contact:
                  type: string
                  minLength: 0
                  maxLength: 2000
                Manager:
                  type: string
                  minLength: 0
                  maxLength: 20
                Status:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Name", "Email", "Phone", "Address", "PostCode", "City", "Country", "Location", "Contact", "Manager", "Status", "Company"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Email,Phone,Address,PostCode,City,Country,Location,Contact,Manager,Status,Company"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    GoodsReceipt:
      type: object
      required:
        - Date
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Number:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        Store:
          type: integer
          format: int32
        Company:
          type: integer
          format: int32
        Currency:
          type: integer
          format: int32
        Net:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Gross:
          type: number
          format: double
        Name:
          type: string
          minLength: 0
          maxLength: 200
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    GoodsReceiptFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                Company:
                Currency:
                Net:
                VAT:
                Gross:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Number", "Store", "Company", "Currency", "Net", "VAT", "Gross", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Number,Store,Company,Currency,Net,VAT,Gross,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    GoodsReceiptItem:
      type: object
      required:
        - GoodsReceipt
        - Product
        - Quantity
        - UoM
        - Price
      properties:
        Id:
          type: integer
          format: int32
        GoodsReceipt:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        UoM:
          type: integer
          format: int32
        Price:
          type: number
          format: double
        Net:
          type: number
          format: double
          readOnly: true
        VAT:
          type: number
          format: double
          readOnly: true
        Gross:
          type: number
          format: double
          readOnly: true
    GoodsReceiptItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                GoodsReceipt:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                GoodsReceipt:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                GoodsReceipt:
                Product:
                Quantity:
                UoM:
                Price:
                Net:
                VAT:
                Gross:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsReceipt:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsReceipt:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsReceipt:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsReceipt:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "GoodsReceipt", "Product", "Quantity", "UoM", "Price", "Net", "VAT", "Gross"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,GoodsReceipt,Product,Quantity,UoM,Price,Net,VAT,Gross"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    GoodsIssue:
      type: object
      required:
        - Date
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Number:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        Store:
          type: integer
          format: int32
        Company:
          type: integer
          format: int32
        Currency:
          type: integer
          format: int32
        Net:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Gross:
          type: number
          format: double
        Name:
          type: string
          minLength: 0
          maxLength: 200
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    GoodsIssueFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                Company:
                Currency:
                Net:
                VAT:
                Gross:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 20
                Store:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Currency:
                  type: integer
                  format: int32
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Name:
                  type: string
                  minLength: 0
                  maxLength: 200
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Number", "Store", "Company", "Currency", "Net", "VAT", "Gross", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Number,Store,Company,Currency,Net,VAT,Gross,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    GoodsIssueItem:
      type: object
      required:
        - GoodsIssue
        - Product
        - Quantity
        - UoM
        - Price
      properties:
        Id:
          type: integer
          format: int32
        GoodsIssue:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        UoM:
          type: integer
          format: int32
        Price:
          type: number
          format: double
        Net:
          type: number
          format: double
          readOnly: true
        VAT:
          type: number
          format: double
          readOnly: true
        Gross:
          type: number
          format: double
          readOnly: true
    GoodsIssueItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                GoodsIssue:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                GoodsIssue:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                GoodsIssue:
                Product:
                Quantity:
                UoM:
                Price:
                Net:
                VAT:
                Gross:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsIssue:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsIssue:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsIssue:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                GoodsIssue:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "GoodsIssue", "Product", "Quantity", "UoM", "Price", "Net", "VAT", "Gross"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,GoodsIssue,Product,Quantity,UoM,Price,Net,VAT,Gross"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    StockRecord:
      type: object
      required:
        - UoM
      properties:
        Id:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        UoM:
          type: integer
          format: int32
        Price:
          type: number
          format: double
        Net:
          type: number
          format: double
        VAT:
          type: number
          format: double
        Gross:
          type: number
          format: double
        Direction:
          type: integer
          format: int32
        ItemId:
          type: integer
          format: int32
        Deleted:
          type: boolean
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    StockRecordFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                ItemId:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Deleted:
                  oneOf:
                    - type: boolean
                    - type: array
                      items:
                        type: boolean
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Price:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Net:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                VAT:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Gross:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Direction:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                ItemId:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Deleted:
                  oneOf:
                    - type: boolean
                    - type: array
                      items:
                        type: boolean
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Product:
                Quantity:
                UoM:
                Price:
                Net:
                VAT:
                Gross:
                Direction:
                ItemId:
                Deleted:
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                ItemId:
                  type: integer
                  format: int32
                Deleted:
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                ItemId:
                  type: integer
                  format: int32
                Deleted:
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                ItemId:
                  type: integer
                  format: int32
                Deleted:
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                UoM:
                  type: integer
                  format: int32
                Price:
                  type: number
                  format: double
                Net:
                  type: number
                  format: double
                VAT:
                  type: number
                  format: double
                Gross:
                  type: number
                  format: double
                Direction:
                  type: integer
                  format: int32
                ItemId:
                  type: integer
                  format: int32
                Deleted:
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Product", "Quantity", "UoM", "Price", "Net", "VAT", "Gross", "Direction", "ItemId", "Deleted", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Product,Quantity,UoM,Price,Net,VAT,Gross,Direction,ItemId,Deleted,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    StockRecordDirection:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    StockRecordDirectionFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    StockAdjustment:
      type: object
      required:
        - Date
        - Operator
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Number:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Store:
          type: integer
          format: int32
        Purpose:
          type: string
          minLength: 0
          maxLength: 100
        Type:
          type: integer
          format: int32
        Operator:
          type: integer
          format: int32
        Description:
          type: string
          minLength: 0
          maxLength: 500
        Name:
          type: string
          minLength: 0
          maxLength: 100
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    StockAdjustmentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Purpose:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Type:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 500
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 500
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Purpose:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Type:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Operator:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 500
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 500
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 36
                Store:
                Purpose:
                  type: string
                  minLength: 0
                  maxLength: 100
                Type:
                Operator:
                Description:
                  type: string
                  minLength: 0
                  maxLength: 500
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 36
                Store:
                  type: integer
                  format: int32
                Purpose:
                  type: string
                  minLength: 0
                  maxLength: 100
                Type:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Description:
                  type: string
                  minLength: 0
                  maxLength: 500
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 36
                Store:
                  type: integer
                  format: int32
                Purpose:
                  type: string
                  minLength: 0
                  maxLength: 100
                Type:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Description:
                  type: string
                  minLength: 0
                  maxLength: 500
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 36
                Store:
                  type: integer
                  format: int32
                Purpose:
                  type: string
                  minLength: 0
                  maxLength: 100
                Type:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Description:
                  type: string
                  minLength: 0
                  maxLength: 500
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 36
                Store:
                  type: integer
                  format: int32
                Purpose:
                  type: string
                  minLength: 0
                  maxLength: 100
                Type:
                  type: integer
                  format: int32
                Operator:
                  type: integer
                  format: int32
                Description:
                  type: string
                  minLength: 0
                  maxLength: 500
                Name:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Number", "Store", "Purpose", "Type", "Operator", "Description", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Number,Store,Purpose,Type,Operator,Description,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    StockAdjustmentType:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 36
        Description:
          type: string
          minLength: 0
          maxLength: 200
    StockAdjustmentTypeFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 36
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 36
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 36
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 36
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 36
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
        $select:
          type: array
          example: ["Id", "Name", "Description"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Description"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    StockAdjustmentItem:
      type: object
      required:
        - Product
        - AdjustedQuantity
        - UoM
      properties:
        Id:
          type: integer
          format: int32
        StockAdjustment:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        AdjustedQuantity:
          type: integer
          format: int32
        UoM:
          type: integer
          format: int32
        Batch:
          type: string
          minLength: 0
          maxLength: 30
        Serial:
          type: string
          minLength: 0
          maxLength: 30
        Description:
          type: string
          minLength: 0
          maxLength: 200
    StockAdjustmentItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                StockAdjustment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                AdjustedQuantity:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Batch:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Serial:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                StockAdjustment:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                AdjustedQuantity:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UoM:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Batch:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Serial:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 200
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 200
            contains:
              type: object
              properties:
                Id:
                StockAdjustment:
                Product:
                AdjustedQuantity:
                UoM:
                Batch:
                  type: string
                  minLength: 0
                  maxLength: 30
                Serial:
                  type: string
                  minLength: 0
                  maxLength: 30
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                StockAdjustment:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                AdjustedQuantity:
                  type: integer
                  format: int32
                UoM:
                  type: integer
                  format: int32
                Batch:
                  type: string
                  minLength: 0
                  maxLength: 30
                Serial:
                  type: string
                  minLength: 0
                  maxLength: 30
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                StockAdjustment:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                AdjustedQuantity:
                  type: integer
                  format: int32
                UoM:
                  type: integer
                  format: int32
                Batch:
                  type: string
                  minLength: 0
                  maxLength: 30
                Serial:
                  type: string
                  minLength: 0
                  maxLength: 30
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                StockAdjustment:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                AdjustedQuantity:
                  type: integer
                  format: int32
                UoM:
                  type: integer
                  format: int32
                Batch:
                  type: string
                  minLength: 0
                  maxLength: 30
                Serial:
                  type: string
                  minLength: 0
                  maxLength: 30
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                StockAdjustment:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                AdjustedQuantity:
                  type: integer
                  format: int32
                UoM:
                  type: integer
                  format: int32
                Batch:
                  type: string
                  minLength: 0
                  maxLength: 30
                Serial:
                  type: string
                  minLength: 0
                  maxLength: 30
                Description:
                  type: string
                  minLength: 0
                  maxLength: 200
        $select:
          type: array
          example: ["Id", "StockAdjustment", "Product", "AdjustedQuantity", "UoM", "Batch", "Serial", "Description"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,StockAdjustment,Product,AdjustedQuantity,UoM,Batch,Serial,Description"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    DeliveryNote:
      type: object
      required:
        - Date
        - Store
        - Employee
        - Customer
      properties:
        Id:
          type: integer
          format: int32
        Number:
          type: string
          minLength: 0
          maxLength: 30
          readOnly: true
        Date:
        Store:
          type: integer
          format: int32
        Employee:
          type: integer
          format: int32
        Company:
          type: integer
          format: int32
        Customer:
          type: integer
          format: int32
    DeliveryNoteFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Date:
                  oneOf:
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Employee:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Date:
                  oneOf:
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Employee:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                Store:
                Employee:
                Company:
                Customer:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                Store:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                Store:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                Store:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                Store:
                  type: integer
                  format: int32
                Employee:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Number", "Date", "Store", "Employee", "Company", "Customer"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Number,Date,Store,Employee,Company,Customer"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    DeliveryNoteItem:
      type: object
      required:
        - Product
        - Quantity
      properties:
        Id:
          type: integer
          format: int32
        DeliveryNote:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        ProductPackaging:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
    DeliveryNoteItemFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                DeliveryNote:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                ProductPackaging:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                DeliveryNote:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                ProductPackaging:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                DeliveryNote:
                Product:
                ProductPackaging:
                Quantity:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                DeliveryNote:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                ProductPackaging:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                DeliveryNote:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                ProductPackaging:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                DeliveryNote:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                ProductPackaging:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                DeliveryNote:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                ProductPackaging:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "DeliveryNote", "Product", "ProductPackaging", "Quantity"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,DeliveryNote,Product,ProductPackaging,Quantity"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Waste:
      type: object
      required:
        - Date
        - WasteType
        - Product
        - Quantity
        - Store
      properties:
        Id:
          type: integer
          format: int32
        Number:
          type: string
          minLength: 0
          maxLength: 30
          readOnly: true
        Date:
        WasteType:
          type: integer
          format: int32
        Customer:
          type: integer
          format: int32
        Product:
          type: integer
          format: int32
        Quantity:
          type: number
          format: double
        Supplier:
          type: integer
          format: int32
        Store:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 300
    WasteFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Date:
                  oneOf:
                WasteType:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 300
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 300
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Number:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 30
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 30
                Date:
                  oneOf:
                WasteType:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Product:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Quantity:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Supplier:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Store:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 300
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 300
            contains:
              type: object
              properties:
                Id:
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                WasteType:
                Customer:
                Product:
                Quantity:
                Supplier:
                Store:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 300
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                WasteType:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                Supplier:
                  type: integer
                  format: int32
                Store:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 300
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                WasteType:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                Supplier:
                  type: integer
                  format: int32
                Store:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 300
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                WasteType:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                Supplier:
                  type: integer
                  format: int32
                Store:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 300
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Number:
                  type: string
                  minLength: 0
                  maxLength: 30
                Date:
                WasteType:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Product:
                  type: integer
                  format: int32
                Quantity:
                  type: number
                  format: double
                Supplier:
                  type: integer
                  format: int32
                Store:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 300
        $select:
          type: array
          example: ["Id", "Number", "Date", "WasteType", "Customer", "Product", "Quantity", "Supplier", "Store", "Reason"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Number,Date,WasteType,Customer,Product,Quantity,Supplier,Store,Reason"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    WasteType:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
        Direction:
          type: number
          format: double
    WasteTypeFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Direction:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                Direction:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                Direction:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                Direction:
                  type: number
                  format: double
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                Direction:
                  type: number
                  format: double
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                Direction:
                  type: number
                  format: double
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                Direction:
                  type: number
                  format: double
        $select:
          type: array
          example: ["Id", "Name", "Direction"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name,Direction"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string